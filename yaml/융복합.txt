
# HPA Metric 서버 지정
kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
kubectl get pods -n kube-system -l k8s-app=metrics-server

# HPA yaml 생성
kubectl autoscale deployment was --cpu-percent=40 --min=1 --max=10 -o yaml --dry-run=client >  was-hpa.yaml

# AWS ingress controller install

eksctl utils associate-iam-oidc-provider --region ap-southeast-1 --cluster cloud02test --approve

curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.0/docs/install/iam_policy.json

aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json


- mac 전용 ==아래 내용은 wsl에서실행== 
eksctl create iamserviceaccount \
  --cluster=frodo \
  --namespace=kube-system \
  --name=aws-load-balancer-controller \
  --attach-policy-arn=arn:aws:iam::940168446867:policy/AWSLoadBalancerControllerIAMPolicy \
  --override-existing-serviceaccounts \
  --approve


- linux, window 전용 ==cli에서 실행하려면
eksctl create iamserviceaccount --cluster=cloud02test --namespace=kube-system --name=aws-load-balancer-controller --attach-policy-arn=arn:aws:iam::940168446867:policy/AWSLoadBalancerControllerIAMPolicy --override-existing-serviceaccounts --approve

==ngress Controller를 설치하기 전에 Cert-manager 설치==

kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.5.4/cert-manager.yaml
  
curl -o v2_4_0_full.yaml https://github.com/kubernetes-sigs/aws-load-balancer-controller/releases/download/v2.4.0/v2_4_0_full.yaml

sed -i.bak -e 's|your-cluster-name|frodo|' ./v2_4_0_full.yaml

  ===v2_4_0_full.yaml에서 다음 부분 제거 ==
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: aws-load-balancer-controller
  name: aws-load-balancer-controller
  namespace: kube-system
---
=====================

==컨트롤러 설치 확인==
kubectl get deployment -n kube-system aws-load-balancer-controller



== ingress annotations====
annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/\\\\
    '
    alb.ingress.kubernetes.io/scheme: internet-facing